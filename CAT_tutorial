# Federico Ferrero

rm(list=ls())

# Install and load the catR package
# install.packages("catR")
# packageVersion("catR")

# Install and load the catR package
install.packages("catR")
library(catR)

# Generate a bank of 100 items with random parameters
set.seed(123)
item_bank <- genDichoMatrix(100, model = "3PL")
print("Item bank generated")

# Initial theta estimate
init_theta <- 0

# Stopping rules: stop after 20 items or when the standard error is below 0.3
stop_criteria <- list(nmax = 20, se = 0.3)

# Simulate a test taker with a true ability level of 0.5
true_theta <- 0.5

# Initialize variables
current_theta <- init_theta
responses <- c()
selected_items <- c()
se <- Inf
item_bank_copy <- item_bank

# Run the CAT process
while (length(selected_items) < stop_criteria$nmax && se > stop_criteria$se) {
  # Select the next item
  next_item <- nextItem(item_bank_copy, theta = current_theta, criterion = "MFI")
  print("Next item selected:")
  print(next_item)
  
  # Simulate the response
  response <- genPattern(true_theta, item_bank_copy[next_item$item, ])
  print("Response simulated:")
  print(response)
  
  # Update responses and selected items
  responses <- c(responses, response)
  selected_items <- c(selected_items, next_item$item)
  
  # Remove the selected item from the item bank
  item_bank_copy <- item_bank_copy[-next_item$item, ]
  
  # Estimate the new theta
  current_theta <- eapEst(item_bank[selected_items, ], responses)
  print("Theta estimated:")
  print(current_theta)
  
  # Calculate the standard error
  se <- semTheta(current_theta, item_bank[selected_items, ], responses)
  print(paste("Selected items:", length(selected_items), "Current Theta:", current_theta, "SE:", se))
}

# Display the results
list(
  estimated_theta = current_theta,
  selected_items = selected_items,
  responses = responses,
  standard_error = se
)
